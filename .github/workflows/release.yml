name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install Tauri dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        # FR: Dépendances système pour Tauri sous Ubuntu 24.04 (résout les conflits libappindicator vs ayatana)
        # EN: System dependencies for Tauri on Ubuntu 24.04 (resolves libappindicator vs ayatana conflicts)

        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1-dev librsvg2-dev patchelf libsoup-3.0-dev libsoup2.4-dev libayatana-appindicator3-dev
          # FR: Compatibilité pkg-config: certains crates recherchent javascriptcoregtk-4.0 alors que 24.04 fournit 4.1
          # EN: pkg-config compatibility: some crates look for javascriptcoregtk-4.0 while 24.04 provides 4.1
          PC_DIR=/usr/lib/x86_64-linux-gnu/pkgconfig
          if [ -d "$PC_DIR" ] && [ -f "$PC_DIR/javascriptcoregtk-4.1.pc" ] && [ ! -f "$PC_DIR/javascriptcoregtk-4.0.pc" ]; then
            sudo ln -s "$PC_DIR/javascriptcoregtk-4.1.pc" "$PC_DIR/javascriptcoregtk-4.0.pc"
          fi
          if [ -d "$PC_DIR" ] && [ -f "$PC_DIR/webkit2gtk-4.1.pc" ] && [ ! -f "$PC_DIR/webkit2gtk-4.0.pc" ]; then
            sudo ln -s "$PC_DIR/webkit2gtk-4.1.pc" "$PC_DIR/webkit2gtk-4.0.pc"
          fi
          echo "PKG_CONFIG_PATH=$PC_DIR:/usr/share/pkgconfig" >> $GITHUB_ENV
          # FR: Ajouter des liens symboliques pour les bibliothèques .so afin de satisfaire le linker (-lwebkit2gtk-4.0)
          # EN: Add symlinks for .so libraries so the linker finds -lwebkit2gtk-4.0
          SO_DIR=/usr/lib/x86_64-linux-gnu
          if [ -d "$SO_DIR" ]; then
            if ls "$SO_DIR"/libwebkit2gtk-4.1.so* >/dev/null 2>&1 && [ ! -e "$SO_DIR/libwebkit2gtk-4.0.so" ]; then
              sudo ln -s $(ls "$SO_DIR"/libwebkit2gtk-4.1.so* | head -n1) "$SO_DIR/libwebkit2gtk-4.0.so"
            fi
            if ls "$SO_DIR"/libjavascriptcoregtk-4.1.so* >/dev/null 2>&1 && [ ! -e "$SO_DIR/libjavascriptcoregtk-4.0.so" ]; then
              sudo ln -s $(ls "$SO_DIR"/libjavascriptcoregtk-4.1.so* | head -n1) "$SO_DIR/libjavascriptcoregtk-4.0.so"
            fi
          fi
          echo "LD_LIBRARY_PATH=$SO_DIR:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          # FR: Rafraîchir le cache ld et valider la résolution pkg-config
          # EN: Refresh ld cache and validate pkg-config resolution
          sudo ldconfig
          pkg-config --modversion webkit2gtk-4.0 || true
          pkg-config --modversion javascriptcoregtk-4.0 || true
          pkg-config --libs webkit2gtk-4.0 || true
          pkg-config --libs javascriptcoregtk-4.0 || true
          # FR: Aider le linker à trouver les libs à l’édition de liens
          # EN: Help the linker find libraries at link time
          echo "RUSTFLAGS=-C link-arg=-L$SO_DIR -C link-arg=-Wl,-rpath,$SO_DIR" >> $GITHUB_ENV

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build web app
        run: pnpm build

      - name: Build Tauri app
        run: pnpm build:desktop

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bigmind-${{ matrix.os }}
          path: |
            apps/desktop/src-tauri/target/release/bundle/
          retention-days: 30

  semantic-release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Semantic Release
        run: pnpm dlx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
